{"version":3,"sources":["components/Tabs/components/Tab/index.tsx","components/Tabs/index.tsx","App.tsx","index.tsx"],"names":["Tab","props","className","children","componentClass","cn","areEqual","prev","next","memo","Tabs","initTab","useState","active","setActive","tabWidth","React","Children","count","labels","map","child","index","label","onClick","style","content","hidden","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAUMA,EAAM,SAACC,GAAkB,IACrBC,EAAwBD,EAAxBC,UAAWC,EAAaF,EAAbE,SACbC,EAAiBC,IAAGH,EAAW,aAErC,OACE,qBAAKA,UAAWE,EAAhB,SACGD,KAKDG,EAAW,SAACC,EAAaC,GAAd,OAA8BD,IAASC,GAEzCC,iBAAKT,EAAKM,G,OCZnBI,G,MAAO,SAACT,GAAkB,IACtBC,EAAqCD,EAArCC,UAAWC,EAA0BF,EAA1BE,SADU,EACgBF,EAAhBU,eADA,MACU,EADV,IAEDC,mBAASD,GAFR,mBAEtBE,EAFsB,KAEdC,EAFc,KAGvBV,EAAiBC,IAAGH,EAAW,QAC/Ba,EAAW,IAAMC,IAAMC,SAASC,MAAMf,GAEtCgB,EAASH,IAAMC,SAASG,IAAIjB,GAAU,SAACkB,EAAYC,GACvD,IAAMC,EAAQF,EAAMpB,MAAMsB,MAE1B,OACE,oBAEErB,UACEG,IACE,cACA,CAAE,mBAAsBQ,IAAWS,IAGvCE,QAAS,kBAAMV,EAAUQ,IACzBG,MAAO,CAAE,cAAc,GAAd,OAAkBV,EAAlB,MATX,SAWGQ,GAVIA,MAeLG,EAAUV,IAAMC,SAASG,IAAIjB,GAAU,SAACkB,EAAOC,GAAR,OAAkBA,IAAUT,EACrEQ,EACA,qBAAKM,QAAM,EAAX,SAAaN,OAEjB,OACE,sBAAKnB,UAAWE,EAAhB,UACE,oBAAIF,UAAU,eAAd,SACGiB,IAEFO,OAKQV,MAAMP,KAAKC,GC3BXkB,MAlBf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACE,eAAC,EAAD,CAAMA,UAAU,OAAhB,UACE,cAAC,EAAD,CAAKqB,MAAM,OAAX,kBAGA,cAAC,EAAD,CAAKA,MAAM,OAAX,kBAGA,cAAC,EAAD,CAAKA,MAAM,QAAX,yBCVRM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9e36a892.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { memo, ReactNode } from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  className?: string;\n  children: ReactNode;\n  label: string;\n}\n\nconst Tab = (props: Props) => {\n  const { className, children } = props;\n  const componentClass = cn(className, 'Tabs__Tab');\n\n  return (\n    <div className={componentClass}>\n      {children}\n    </div>\n  );\n};\n\nconst areEqual = (prev: Props, next: Props) => prev === next;\n\nexport default memo(Tab, areEqual);","import React, { useState, ReactNode, CSSProperties } from 'react';\nimport cn from 'classnames';\n\nimport './style.scss';\n\nexport interface Props {\n  className?: string;\n  initTab?: number;\n  children: ReactNode;\n}\n\nconst Tabs = (props: Props) => {\n  const { className, children, initTab = 0 } = props;\n  const [active, setActive] = useState(initTab);\n  const componentClass = cn(className, 'Tabs');\n  const tabWidth = 100 / React.Children.count(children);\n\n  const labels = React.Children.map(children, (child: any, index) => {\n    const label = child.props.label;\n\n    return (\n      <li\n        key={label}\n        className={\n          cn(\n            'Tabs__Label',\n            { 'Tabs__Label_active': active === index },\n          )\n        }\n        onClick={() => setActive(index)}\n        style={{ '--Tab-width': `${tabWidth}%` } as CSSProperties}\n      >\n        {label}\n      </li>\n    );\n  });\n\n  const content = React.Children.map(children, (child, index) => index === active\n    ? child\n    : <div hidden>{child}</div>);\n\n  return (\n    <div className={componentClass}>\n      <ul className=\"Tabs__Labels\">\n        {labels}\n      </ul>\n      {content}\n    </div>\n  );\n};\n\nexport default React.memo(Tabs);","import React from 'react';\n\nimport './App.scss';\nimport Tab from './components/Tabs/components/Tab';\nimport Tabs from './components/Tabs';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tabs className=\"Tabs\">\n        <Tab label=\"Home\">\n          Home\n          </Tab>\n        <Tab label=\"Page\">\n          Page\n          </Tab>\n        <Tab label=\"About\">\n          About\n          </Tab>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}